pipeline {
    agent { 
        label 'jenkins-agent'
    }

    environment {
        stack_name= 'EcsStackPetclinic'
    }

    stages { 
        stage('PollSCM') {
            steps {
                checkout([$class: 'GitSCM', branches: [[name: 'master']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'gitlab-credentials', url: 'https://yoko.ukrtux.com/blacksun0504/petclinic-project.git']]])
                script {
                        tags = sh(script: "git tag --sort=v:refname | tail -5 ", returnStdout: true).trim()
                    }
            }
        }

        stage('Select TAG as a parameter') {
            steps {
                script {
                    def tag_response = input message: 'Select a version:',
                    parameters: [choice(choices: "${tags}",  description: 'Select an application version for deployment.', name: '')]
                    env.tag_response = tag_response
                }
            }
        }

        stage('Clone Git repository with cfn templates') {
            steps {
                git branch: 'master', url: 'git@yoko.ukrtux.com:blacksun0504/jenkins-pipelines-petclinic.git', credentialsId: 'jenkins-gitlab-key'
            }
        }

        stage('Create or update the Cloudformation stack') {
            steps {
                echo "Selected version ${env.tag_response} to deploy."
                sh "aws cloudformation deploy --stack-name ${stack_name} --template-file ${WORKSPACE}/Job3/infrastructure.yml \
                    --parameter-overrides EcsDockerImage=264800517173.dkr.ecr.us-west-2.amazonaws.com/petclinic:${env.tag_response}"

            }
        }
    }

    post {
        success {
            deleteDir() /* clean up the workspace */
        }
    }
}