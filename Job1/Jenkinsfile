pipeline {
    agent { 
        label 'jenkins-agent'
    }

    stages { 
        stage('Clone repository') {
            steps {
                echo "Running on ${NODE_NAME}."
                checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [], gitTool: 'Default', submoduleCfg: [], userRemoteConfigs: [[credentialsId:  'gitlab-credentials', url: 'https://yoko.ukrtux.com/blacksun0504/petclinic-project/']]])
            }
        }

        stage('Run test and build jar') {
            steps {
                sh label: '', script: '''cd ${WORKSPACE}/spring-petclinic
                echo $PWD
                sleep 10
                mvn clean package && echo "Build ${BUILD_ID} is OK."
                '''
                script {
                    app_version=sh(script: 'mvn org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=project.version -q -DforceStdout')
                }
            }
        }
        stage('Build image') {
            steps {
                sh label: '', script: '''
                echo $PWD
                docker build -t 264800517173.dkr.ecr.us-west-2.amazonaws.com/petclinic-${BUILD_NUMBER}:latest -f ${WORKSPACE}/Dockerfile ${WORKSPACE}/spring-petclinic/target'''
            }
        }
        stage('Push image') {
            steps {
                script {
                    docker.withRegistry('https://264800517173.dkr.ecr.us-west-2.amazonaws.com/petclinic', 'ecr:us-west-2:aws-admin-user') {
                        sh "docker push 264800517173.dkr.ecr.us-west-2.amazonaws.com/petclinic:latest"
                    }
                }
            }
        }

        stage('Tag Git commit') {
            steps{
                withCredentials([usernamePassword(credentialsId: 'gitlab-credentials', passwordVariable: 'GIT_PASSWORD', usernameVariable: 'GIT_USERNAME')]) {
                    sh "git tag v$app_version.$BUILD_NUMBER"
                    sh('git push https://${GIT_USERNAME}:${GIT_PASSWORD}@yoko.ukrtux.com:blacksun0504/petclinic-project.git --tags')
                    // sh "git push origin v$applicationVersion.$BUILD_NUMBER"
                }

            }
        }
    }

    post {
        always {
            echo 'The pipeline run has been finished.'  
        }
        success {
            echo "Build ${BUILD_ID} is successful."
            cleanWs() /* clean up the workspace */
        }
        
        failure {
            echo "Build ${BUILD_ID} has failed. :("
            cleanWs() /* clean up the workspace */
        }
    }
}
