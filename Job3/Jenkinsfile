pipeline {
    agent { 
        label 'jenkins-agent'
    }

    environment {
        stack_name= 'EcsStackPetclinic'
        s3_bucket = 's3://devopslabs3/cfn-templates'
    }

    stages { 

        stage('Clone Git repository') {
            steps{
                    git branch: 'master', url: 'git@yoko.ukrtux.com:blacksun0504/jenkins-pipelines-petclinic.git', credentialsId: 'jenkins-gitlab-key'
            }
        }

        stage('Validate the Cloudformation templates with validate-template and cfn-lint') {
            steps {
                sh script: '''
                if $(cfn-lint --version); 
                then
                    cfn-lint ${WORKSPACE}/Job3/infrastructure.yml;
                else
                    sudo apt install python-pip -y && sudo pip install cfn-lint
                    cfn-lint ${WORKSPACE}/Job3/infrastructure.yml;
                fi'''
                echo "Validating the template..."
                sh "aws cloudformation validate-template --template-body file://${WORKSPACE}/Job3/infrastructure.yml"
            }
        }
        stage('Upload Cloudformation templates to S3 bucket') {
            steps {
                sh "aws s3 cp ${WORKSPACE}/Job3/infrastructure.yml ${s3_bucket}/infrastructure.yml"
            }
        }
        stage('Create or update the Cloudformation stack') {
            steps {
                sh "aws cloudformation deploy --stack-name ${stack_name} --template-file ${WORKSPACE}/Job3/infrastructure.yml --capabilities CAPABILITY_NAMED_IAM"
            }
        }
    }

    post {
        success {
            deleteDir() /* clean up the workspace */
        }

        failure {
            sh "aws cloudformation delete-stack --stack-name  ${stack_name}"
        }
    }
}